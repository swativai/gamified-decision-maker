/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as SignupImport } from './routes/signup';
import { Route as RoomsDetailsImport } from './routes/roomsDetails';
import { Route as LoginImport } from './routes/login';
import { Route as HomeImport } from './routes/home';
import { Route as CreateRoomImport } from './routes/createRoom';
import { Route as VottingRoomRouteImport } from './routes/vottingRoom/route';
import { Route as VoteCountRouteImport } from './routes/vote-count/route';
import { Route as RoomRouteImport } from './routes/room/route';
import { Route as JoinRoomRouteImport } from './routes/joinRoom/route';
import { Route as IndexImport } from './routes/index';
import { Route as VottingRoomRoomCodeRouteImport } from './routes/vottingRoom/$roomCode/route';
import { Route as VoteCountVoteIdRouteImport } from './routes/vote-count/$voteId/route';
import { Route as RoomRoomIdRouteImport } from './routes/room/$roomId/route';
import { Route as JoinRoomRoomCodeRouteImport } from './routes/joinRoom/$roomCode/route';

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any);

const RoomsDetailsRoute = RoomsDetailsImport.update({
  id: '/roomsDetails',
  path: '/roomsDetails',
  getParentRoute: () => rootRoute,
} as any);

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any);

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any);

const CreateRoomRoute = CreateRoomImport.update({
  id: '/createRoom',
  path: '/createRoom',
  getParentRoute: () => rootRoute,
} as any);

const VottingRoomRouteRoute = VottingRoomRouteImport.update({
  id: '/vottingRoom',
  path: '/vottingRoom',
  getParentRoute: () => rootRoute,
} as any);

const VoteCountRouteRoute = VoteCountRouteImport.update({
  id: '/vote-count',
  path: '/vote-count',
  getParentRoute: () => rootRoute,
} as any);

const RoomRouteRoute = RoomRouteImport.update({
  id: '/room',
  path: '/room',
  getParentRoute: () => rootRoute,
} as any);

const JoinRoomRouteRoute = JoinRoomRouteImport.update({
  id: '/joinRoom',
  path: '/joinRoom',
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

const VottingRoomRoomCodeRouteRoute = VottingRoomRoomCodeRouteImport.update({
  id: '/$roomCode',
  path: '/$roomCode',
  getParentRoute: () => VottingRoomRouteRoute,
} as any);

const VoteCountVoteIdRouteRoute = VoteCountVoteIdRouteImport.update({
  id: '/$voteId',
  path: '/$voteId',
  getParentRoute: () => VoteCountRouteRoute,
} as any);

const RoomRoomIdRouteRoute = RoomRoomIdRouteImport.update({
  id: '/$roomId',
  path: '/$roomId',
  getParentRoute: () => RoomRouteRoute,
} as any);

const JoinRoomRoomCodeRouteRoute = JoinRoomRoomCodeRouteImport.update({
  id: '/$roomCode',
  path: '/$roomCode',
  getParentRoute: () => JoinRoomRouteRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/joinRoom': {
      id: '/joinRoom';
      path: '/joinRoom';
      fullPath: '/joinRoom';
      preLoaderRoute: typeof JoinRoomRouteImport;
      parentRoute: typeof rootRoute;
    };
    '/room': {
      id: '/room';
      path: '/room';
      fullPath: '/room';
      preLoaderRoute: typeof RoomRouteImport;
      parentRoute: typeof rootRoute;
    };
    '/vote-count': {
      id: '/vote-count';
      path: '/vote-count';
      fullPath: '/vote-count';
      preLoaderRoute: typeof VoteCountRouteImport;
      parentRoute: typeof rootRoute;
    };
    '/vottingRoom': {
      id: '/vottingRoom';
      path: '/vottingRoom';
      fullPath: '/vottingRoom';
      preLoaderRoute: typeof VottingRoomRouteImport;
      parentRoute: typeof rootRoute;
    };
    '/createRoom': {
      id: '/createRoom';
      path: '/createRoom';
      fullPath: '/createRoom';
      preLoaderRoute: typeof CreateRoomImport;
      parentRoute: typeof rootRoute;
    };
    '/home': {
      id: '/home';
      path: '/home';
      fullPath: '/home';
      preLoaderRoute: typeof HomeImport;
      parentRoute: typeof rootRoute;
    };
    '/login': {
      id: '/login';
      path: '/login';
      fullPath: '/login';
      preLoaderRoute: typeof LoginImport;
      parentRoute: typeof rootRoute;
    };
    '/roomsDetails': {
      id: '/roomsDetails';
      path: '/roomsDetails';
      fullPath: '/roomsDetails';
      preLoaderRoute: typeof RoomsDetailsImport;
      parentRoute: typeof rootRoute;
    };
    '/signup': {
      id: '/signup';
      path: '/signup';
      fullPath: '/signup';
      preLoaderRoute: typeof SignupImport;
      parentRoute: typeof rootRoute;
    };
    '/joinRoom/$roomCode': {
      id: '/joinRoom/$roomCode';
      path: '/$roomCode';
      fullPath: '/joinRoom/$roomCode';
      preLoaderRoute: typeof JoinRoomRoomCodeRouteImport;
      parentRoute: typeof JoinRoomRouteImport;
    };
    '/room/$roomId': {
      id: '/room/$roomId';
      path: '/$roomId';
      fullPath: '/room/$roomId';
      preLoaderRoute: typeof RoomRoomIdRouteImport;
      parentRoute: typeof RoomRouteImport;
    };
    '/vote-count/$voteId': {
      id: '/vote-count/$voteId';
      path: '/$voteId';
      fullPath: '/vote-count/$voteId';
      preLoaderRoute: typeof VoteCountVoteIdRouteImport;
      parentRoute: typeof VoteCountRouteImport;
    };
    '/vottingRoom/$roomCode': {
      id: '/vottingRoom/$roomCode';
      path: '/$roomCode';
      fullPath: '/vottingRoom/$roomCode';
      preLoaderRoute: typeof VottingRoomRoomCodeRouteImport;
      parentRoute: typeof VottingRoomRouteImport;
    };
  }
}

// Create and export the route tree

interface JoinRoomRouteRouteChildren {
  JoinRoomRoomCodeRouteRoute: typeof JoinRoomRoomCodeRouteRoute;
}

const JoinRoomRouteRouteChildren: JoinRoomRouteRouteChildren = {
  JoinRoomRoomCodeRouteRoute: JoinRoomRoomCodeRouteRoute,
};

const JoinRoomRouteRouteWithChildren = JoinRoomRouteRoute._addFileChildren(
  JoinRoomRouteRouteChildren,
);

interface RoomRouteRouteChildren {
  RoomRoomIdRouteRoute: typeof RoomRoomIdRouteRoute;
}

const RoomRouteRouteChildren: RoomRouteRouteChildren = {
  RoomRoomIdRouteRoute: RoomRoomIdRouteRoute,
};

const RoomRouteRouteWithChildren = RoomRouteRoute._addFileChildren(
  RoomRouteRouteChildren,
);

interface VoteCountRouteRouteChildren {
  VoteCountVoteIdRouteRoute: typeof VoteCountVoteIdRouteRoute;
}

const VoteCountRouteRouteChildren: VoteCountRouteRouteChildren = {
  VoteCountVoteIdRouteRoute: VoteCountVoteIdRouteRoute,
};

const VoteCountRouteRouteWithChildren = VoteCountRouteRoute._addFileChildren(
  VoteCountRouteRouteChildren,
);

interface VottingRoomRouteRouteChildren {
  VottingRoomRoomCodeRouteRoute: typeof VottingRoomRoomCodeRouteRoute;
}

const VottingRoomRouteRouteChildren: VottingRoomRouteRouteChildren = {
  VottingRoomRoomCodeRouteRoute: VottingRoomRoomCodeRouteRoute,
};

const VottingRoomRouteRouteWithChildren =
  VottingRoomRouteRoute._addFileChildren(VottingRoomRouteRouteChildren);

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/joinRoom': typeof JoinRoomRouteRouteWithChildren;
  '/room': typeof RoomRouteRouteWithChildren;
  '/vote-count': typeof VoteCountRouteRouteWithChildren;
  '/vottingRoom': typeof VottingRoomRouteRouteWithChildren;
  '/createRoom': typeof CreateRoomRoute;
  '/home': typeof HomeRoute;
  '/login': typeof LoginRoute;
  '/roomsDetails': typeof RoomsDetailsRoute;
  '/signup': typeof SignupRoute;
  '/joinRoom/$roomCode': typeof JoinRoomRoomCodeRouteRoute;
  '/room/$roomId': typeof RoomRoomIdRouteRoute;
  '/vote-count/$voteId': typeof VoteCountVoteIdRouteRoute;
  '/vottingRoom/$roomCode': typeof VottingRoomRoomCodeRouteRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/joinRoom': typeof JoinRoomRouteRouteWithChildren;
  '/room': typeof RoomRouteRouteWithChildren;
  '/vote-count': typeof VoteCountRouteRouteWithChildren;
  '/vottingRoom': typeof VottingRoomRouteRouteWithChildren;
  '/createRoom': typeof CreateRoomRoute;
  '/home': typeof HomeRoute;
  '/login': typeof LoginRoute;
  '/roomsDetails': typeof RoomsDetailsRoute;
  '/signup': typeof SignupRoute;
  '/joinRoom/$roomCode': typeof JoinRoomRoomCodeRouteRoute;
  '/room/$roomId': typeof RoomRoomIdRouteRoute;
  '/vote-count/$voteId': typeof VoteCountVoteIdRouteRoute;
  '/vottingRoom/$roomCode': typeof VottingRoomRoomCodeRouteRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexRoute;
  '/joinRoom': typeof JoinRoomRouteRouteWithChildren;
  '/room': typeof RoomRouteRouteWithChildren;
  '/vote-count': typeof VoteCountRouteRouteWithChildren;
  '/vottingRoom': typeof VottingRoomRouteRouteWithChildren;
  '/createRoom': typeof CreateRoomRoute;
  '/home': typeof HomeRoute;
  '/login': typeof LoginRoute;
  '/roomsDetails': typeof RoomsDetailsRoute;
  '/signup': typeof SignupRoute;
  '/joinRoom/$roomCode': typeof JoinRoomRoomCodeRouteRoute;
  '/room/$roomId': typeof RoomRoomIdRouteRoute;
  '/vote-count/$voteId': typeof VoteCountVoteIdRouteRoute;
  '/vottingRoom/$roomCode': typeof VottingRoomRoomCodeRouteRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/joinRoom'
    | '/room'
    | '/vote-count'
    | '/vottingRoom'
    | '/createRoom'
    | '/home'
    | '/login'
    | '/roomsDetails'
    | '/signup'
    | '/joinRoom/$roomCode'
    | '/room/$roomId'
    | '/vote-count/$voteId'
    | '/vottingRoom/$roomCode';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/joinRoom'
    | '/room'
    | '/vote-count'
    | '/vottingRoom'
    | '/createRoom'
    | '/home'
    | '/login'
    | '/roomsDetails'
    | '/signup'
    | '/joinRoom/$roomCode'
    | '/room/$roomId'
    | '/vote-count/$voteId'
    | '/vottingRoom/$roomCode';
  id:
    | '__root__'
    | '/'
    | '/joinRoom'
    | '/room'
    | '/vote-count'
    | '/vottingRoom'
    | '/createRoom'
    | '/home'
    | '/login'
    | '/roomsDetails'
    | '/signup'
    | '/joinRoom/$roomCode'
    | '/room/$roomId'
    | '/vote-count/$voteId'
    | '/vottingRoom/$roomCode';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  JoinRoomRouteRoute: typeof JoinRoomRouteRouteWithChildren;
  RoomRouteRoute: typeof RoomRouteRouteWithChildren;
  VoteCountRouteRoute: typeof VoteCountRouteRouteWithChildren;
  VottingRoomRouteRoute: typeof VottingRoomRouteRouteWithChildren;
  CreateRoomRoute: typeof CreateRoomRoute;
  HomeRoute: typeof HomeRoute;
  LoginRoute: typeof LoginRoute;
  RoomsDetailsRoute: typeof RoomsDetailsRoute;
  SignupRoute: typeof SignupRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  JoinRoomRouteRoute: JoinRoomRouteRouteWithChildren,
  RoomRouteRoute: RoomRouteRouteWithChildren,
  VoteCountRouteRoute: VoteCountRouteRouteWithChildren,
  VottingRoomRouteRoute: VottingRoomRouteRouteWithChildren,
  CreateRoomRoute: CreateRoomRoute,
  HomeRoute: HomeRoute,
  LoginRoute: LoginRoute,
  RoomsDetailsRoute: RoomsDetailsRoute,
  SignupRoute: SignupRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/joinRoom",
        "/room",
        "/vote-count",
        "/vottingRoom",
        "/createRoom",
        "/home",
        "/login",
        "/roomsDetails",
        "/signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/joinRoom": {
      "filePath": "joinRoom/route.tsx",
      "children": [
        "/joinRoom/$roomCode"
      ]
    },
    "/room": {
      "filePath": "room/route.tsx",
      "children": [
        "/room/$roomId"
      ]
    },
    "/vote-count": {
      "filePath": "vote-count/route.tsx",
      "children": [
        "/vote-count/$voteId"
      ]
    },
    "/vottingRoom": {
      "filePath": "vottingRoom/route.tsx",
      "children": [
        "/vottingRoom/$roomCode"
      ]
    },
    "/createRoom": {
      "filePath": "createRoom.tsx"
    },
    "/home": {
      "filePath": "home.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/roomsDetails": {
      "filePath": "roomsDetails.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/joinRoom/$roomCode": {
      "filePath": "joinRoom/$roomCode/route.tsx",
      "parent": "/joinRoom"
    },
    "/room/$roomId": {
      "filePath": "room/$roomId/route.tsx",
      "parent": "/room"
    },
    "/vote-count/$voteId": {
      "filePath": "vote-count/$voteId/route.tsx",
      "parent": "/vote-count"
    },
    "/vottingRoom/$roomCode": {
      "filePath": "vottingRoom/$roomCode/route.tsx",
      "parent": "/vottingRoom"
    }
  }
}
ROUTE_MANIFEST_END */
